! Goal is not to exhaustively test all combinations, but rather at least
! one variant along each axis:

module newTest_AssertReal_mod
   use pf_SourceLocation_mod
   use pf_Exceptionlist_mod
   use FUnit, only: SourceLocation, throw, anyExceptions, AssertExceptionRaised
   use pf_AssertReal_0d_mod
   use pf_AssertReal_1d_mod
   use pf_AssertReal_2d_mod
   implicit none
   
   @suite(name='AssertEqual_Real_suite')

contains

   ! Sanity check - verify that all combinatinos of optional arguments are allowed.
   @test
   subroutine test_equal_real_0d_real_0d_real_0d()
      @assertEqual(1.0, 1.0)
      @assertEqual(1.0, 1.0, tolerance=0.0)
      @assertEqual(1.0, 1.0, message='placeholder')
   end subroutine test_equal_real_0d_real_0d_real_0d

   ! Test formatting of failure messages
   @test
   subroutine test_equal_fail()
      call assertEqual(1.0,2.0)
      call assertExceptionRaised(&
           & 'ArrayAssertEqual failure:' // new_line('a') // &
           & '    Expected: <1.000000>' // new_line('a') // &
           & '    Actual:   <2.000000>' // new_line('a') // &
           & '    Difference: <1.000000> (greater than tolerance of 0.)' &
      & )
   end subroutine test_equal_fail
   
end module newTest_AssertReal_mod
   
